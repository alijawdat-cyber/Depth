rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Users can only access their own data
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Projects - clients can only access their own projects
    match /projects/{projectId} {
      allow read: if request.auth != null && 
        request.auth.token.email == resource.data.clientEmail;
      allow write: if request.auth != null && 
        request.auth.token.email in ['admin@depth-agency.com'];
    }
    
    // Files - clients can only access files for their projects
    match /files/{fileId} {
      allow read: if request.auth != null && 
        exists(/databases/$(database)/documents/projects/$(resource.data.projectId)) &&
        get(/databases/$(database)/documents/projects/$(resource.data.projectId)).data.clientEmail == request.auth.token.email;
      allow write: if request.auth != null && 
        request.auth.token.email in ['admin@depth-agency.com'];
    }
    
    // Approvals - clients can read and update their project approvals
    match /approvals/{approvalId} {
      allow read, update: if request.auth != null && 
        exists(/databases/$(database)/documents/projects/$(resource.data.projectId)) &&
        get(/databases/$(database)/documents/projects/$(resource.data.projectId)).data.clientEmail == request.auth.token.email;
      allow create: if request.auth != null && 
        request.auth.token.email in ['admin@depth-agency.com'];
    }
    
    // Reports - read only for clients
    match /reports/{reportId} {
      allow read: if request.auth != null && 
        exists(/databases/$(database)/documents/projects/$(resource.data.projectId)) &&
        get(/databases/$(database)/documents/projects/$(resource.data.projectId)).data.clientEmail == request.auth.token.email;
      allow write: if request.auth != null && 
        request.auth.token.email in ['admin@depth-agency.com'];
    }
    
    // Catalog collections - read access for authenticated users
    match /equipment_catalog/{equipmentId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && 
        request.auth.token.email in ['admin@depth-agency.com'];
    }
    
    match /equipment_presets/{presetId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && 
        request.auth.token.email in ['admin@depth-agency.com'];
    }
    
    match /catalog_subcategories/{subcategoryId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && 
        request.auth.token.email in ['admin@depth-agency.com'];
    }
    
    match /catalog_categories/{categoryId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && 
        request.auth.token.email in ['admin@depth-agency.com'];
    }
    
    match /catalog_verticals/{verticalId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && 
        request.auth.token.email in ['admin@depth-agency.com'];
    }
    
    // Creators collection - creators can read/update their own data
    match /creators/{creatorId} {
      allow read, update: if request.auth != null && 
        resource.data.email == request.auth.token.email;
      allow create, delete: if request.auth != null && 
        request.auth.token.email in ['admin@depth-agency.com'];
    }
  }
}