"use strict";(self.webpackChunkdepth_frontend=self.webpackChunkdepth_frontend||[]).push([[9869],{"./node_modules/@mantine/hooks/esm/use-merged-ref/use-merged-ref.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{bl:()=>assignRef,pc:()=>useMergedRef});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/next/dist/compiled/react/index.js");function assignRef(ref,value){if("function"==typeof ref)return ref(value);"object"==typeof ref&&null!==ref&&"current"in ref&&(ref.current=value)}function useMergedRef(...refs){return(0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function mergeRefs(...refs){const cleanupMap=new Map;return node=>{if(refs.forEach(ref=>{const cleanup=assignRef(ref,node);cleanup&&cleanupMap.set(ref,cleanup)}),cleanupMap.size>0)return()=>{refs.forEach(ref=>{const cleanup=cleanupMap.get(ref);cleanup&&"function"==typeof cleanup?cleanup():assignRef(ref,null)}),cleanupMap.clear()}}}(...refs),refs)}},"./src/components/atoms/Button/Button.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{$:()=>Button});var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/next/dist/compiled/react/jsx-runtime.js"),react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/next/dist/compiled/react/index.js"),_mantine_core__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@mantine/core/esm/components/Button/Button.mjs");function sizeVars(size){const isCompact=size.startsWith("compact-"),actualSize=isCompact?size.replace("compact-",""):size;return{height:isCompact?`var(--btn-h-${actualSize}-compact)`:`var(--btn-h-${actualSize})`,paddingInline:`var(--btn-px-${actualSize})`,fontSize:`var(--fs-btn-${actualSize})`,minHeight:isCompact?`var(--btn-h-${actualSize}-compact)`:void 0,gap:{xs:"0.375rem",sm:"0.5rem",md:"0.625rem",lg:"0.75rem",xl:"0.875rem"}[actualSize]||"0.625rem",borderRadius:"var(--radius-md)"}}const Button=react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(function Button({className,size="md",variant="primary",disabled,loading,leftSection,rightSection,fullWidth,justify,gradient,autoContrast,loaderProps,children,style,onClick,type="button","aria-label":ariaLabel,...props},ref){const base={fontWeight:600,display:"inline-flex",alignItems:"center",justifyContent:justify||"center",whiteSpace:"nowrap",userSelect:"none",outline:"none",cursor:disabled?"not-allowed":"pointer",width:fullWidth?"100%":"auto"},v=function getVariantStyle(variant,customGradient){switch(variant){case"primary":return{base:{backgroundColor:"var(--color-action-primary-bg)",color:"var(--color-action-primary-fg)",border:"1px solid transparent",outline:"none",transition:"all 120ms ease"},hoverBg:"var(--color-action-primary-hover)",disabledBg:"var(--color-action-primary-disabled)"};case"secondary":return{base:{backgroundColor:"var(--color-action-secondary-bg)",color:"var(--color-action-secondary-fg)",border:"1px solid var(--color-bd-default)",transition:"all 120ms ease"},hoverBg:"var(--color-action-secondary-hover)"};case"outline":return{base:{backgroundColor:"transparent",color:"var(--color-action-outline-fg)",border:"1px solid var(--color-action-outline-bd)",transition:"all 120ms ease"},hoverBg:"var(--color-action-outline-hover)"};case"ghost":return{base:{backgroundColor:"transparent",color:"var(--color-action-ghost-fg)",border:"1px solid transparent",transition:"all 120ms ease"},hoverBg:"var(--color-action-ghost-hover)"};case"gradient":return{base:{background:customGradient?`linear-gradient(${customGradient.deg||45}deg, ${customGradient.from}, ${customGradient.to})`:"linear-gradient(45deg, var(--color-primary), var(--color-secondary))",color:"var(--color-white)",border:"1px solid transparent",transition:"all 120ms ease"}};case"danger":return{base:{backgroundColor:"var(--color-danger)",color:"var(--color-white)",border:"1px solid transparent",transition:"all 120ms ease"},hoverBg:"var(--color-danger-hover)"};default:return{base:{}}}}(variant,gradient),s={...base,...sizeVars(size),...v.base,...style||{}};return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_mantine_core__WEBPACK_IMPORTED_MODULE_2__.$,{ref,leftSection,rightSection,loading,disabled,fullWidth,justify,autoContrast,loaderProps,className,onClick,type,"aria-label":ariaLabel,styles:{root:{...s,"&:hover:not([data-disabled])":v.hoverBg?{backgroundColor:v.hoverBg}:void 0,"&[data-disabled], &:disabled":{backgroundColor:v.disabledBg||"var(--color-bg-disabled)",color:"var(--color-fg-disabled)",opacity:v.disabledBg?1:.6,cursor:"not-allowed"},"&:focus-visible":{outline:"2px solid var(--color-primary)",outlineOffset:"2px"},...size.startsWith("compact-")&&{minHeight:s.height,height:s.height}},section:{"& svg":{width:"1em",height:"1em"}},label:{fontWeight:"inherit"}},variant:"unstyled",size:"md",...props,children})});try{Button.displayName="Button",Button.__docgenInfo={description:"",displayName:"Button",props:{size:{defaultValue:{value:"md"},description:"Size of the button - supports compact variants for reduced padding",name:"size",required:!1,type:{name:"enum",value:[{value:'"xs"'},{value:'"sm"'},{value:'"md"'},{value:'"lg"'},{value:'"xl"'},{value:'"compact-xs"'},{value:'"compact-sm"'},{value:'"compact-md"'},{value:'"compact-lg"'},{value:'"compact-xl"'}]}},variant:{defaultValue:{value:"primary"},description:"Visual style variant",name:"variant",required:!1,type:{name:"enum",value:[{value:'"primary"'},{value:'"secondary"'},{value:'"gradient"'},{value:'"outline"'},{value:'"ghost"'},{value:'"danger"'}]}},loading:{defaultValue:null,description:"Shows loading state with spinner",name:"loading",required:!1,type:{name:"boolean"}},leftSection:{defaultValue:null,description:"Icon displayed on the left side (automatically flipped in RTL)",name:"leftSection",required:!1,type:{name:"ReactNode"}},rightSection:{defaultValue:null,description:"Icon displayed on the right side (automatically flipped in RTL)",name:"rightSection",required:!1,type:{name:"ReactNode"}},fullWidth:{defaultValue:null,description:"Makes button take full width of parent",name:"fullWidth",required:!1,type:{name:"boolean"}},disabled:{defaultValue:null,description:"Disabled state - prevents interaction",name:"disabled",required:!1,type:{name:"boolean"}},justify:{defaultValue:null,description:"Content justification - useful for icons positioning",name:"justify",required:!1,type:{name:"JustifyContent"}},gradient:{defaultValue:null,description:"Gradient configuration for gradient variant",name:"gradient",required:!1,type:{name:"{ from: string; to: string; deg?: number; }"}},autoContrast:{defaultValue:null,description:"Auto contrast for better text visibility",name:"autoContrast",required:!1,type:{name:"boolean"}},loaderProps:{defaultValue:null,description:"Custom loader props",name:"loaderProps",required:!1,type:{name:"{ type?: string; size?: number; } | undefined"}},children:{defaultValue:null,description:"Button content",name:"children",required:!1,type:{name:"ReactNode"}},className:{defaultValue:null,description:"Additional CSS classes",name:"className",required:!1,type:{name:"string"}},style:{defaultValue:null,description:"Custom styles",name:"style",required:!1,type:{name:"CSSProperties"}},onClick:{defaultValue:null,description:"Click handler",name:"onClick",required:!1,type:{name:"((event: MouseEvent<HTMLButtonElement, MouseEvent>) => void)"}},"aria-label":{defaultValue:null,description:"ARIA label for accessibility",name:"aria-label",required:!1,type:{name:"string"}},type:{defaultValue:{value:"button"},description:"Button type",name:"type",required:!1,type:{name:"enum",value:[{value:'"button"'},{value:'"submit"'},{value:'"reset"'}]}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/atoms/Button/Button.tsx#Button"]={docgenInfo:Button.__docgenInfo,name:"Button",path:"src/components/atoms/Button/Button.tsx#Button"})}catch(__react_docgen_typescript_loader_error){}},"./src/components/atoms/Button/index.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{$:()=>_Button__WEBPACK_IMPORTED_MODULE_0__.$});var _Button__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/components/atoms/Button/Button.tsx")},"./src/components/atoms/FileButton/FileButton.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{CustomTriggers:()=>CustomTriggers,Default:()=>Default,DifferentAcceptTypes:()=>DifferentAcceptTypes,Disabled:()=>Disabled,MultipleFiles:()=>MultipleFiles,WithProgress:()=>WithProgress,__namedExportsOrder:()=>__namedExportsOrder,default:()=>FileButton_stories});var jsx_runtime=__webpack_require__("./node_modules/next/dist/compiled/react/jsx-runtime.js"),react=__webpack_require__("./node_modules/next/dist/compiled/react/index.js"),use_merged_ref=__webpack_require__("./node_modules/@mantine/hooks/esm/use-merged-ref/use-merged-ref.mjs"),use_props=__webpack_require__("./node_modules/@mantine/core/esm/core/MantineProvider/use-props/use-props.mjs");const defaultProps={multiple:!1},FileButton=(0,react.forwardRef)((props,ref)=>{const{onChange,children,multiple,accept,name,form,resetRef,disabled,capture,inputProps,...others}=(0,use_props.Y)("FileButton",defaultProps,props),inputRef=(0,react.useRef)(null);return(0,use_merged_ref.bl)(resetRef,()=>{inputRef.current&&(inputRef.current.value="")}),(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)("input",{style:{display:"none"},type:"file",accept,multiple,onChange:event=>{if(null===event.currentTarget.files)return onChange(multiple?[]:null);onChange(multiple?Array.from(event.currentTarget.files):event.currentTarget.files[0]||null)},ref:(0,use_merged_ref.pc)(ref,inputRef),name,form,capture,...inputProps}),children({onClick:()=>{!disabled&&inputRef.current?.click()},...others})]})});FileButton.displayName="@mantine/core/FileButton";const FileButton_FileButton=({onChange,accept,multiple=!1,disabled=!1,children,name,form,inputProps,...props})=>(0,jsx_runtime.jsx)(FileButton,{onChange:payload=>{onChange(Array.isArray(payload)?payload[0]:payload)},accept,multiple,disabled,name,form,inputProps,...props,children}),FileButton_Multiple=({onChange,accept,disabled=!1,children,name,form,inputProps,...props})=>(0,jsx_runtime.jsx)(FileButton,{onChange:payload=>{Array.isArray(payload)?onChange(payload):onChange(payload?[payload]:[])},accept,multiple:!0,disabled,name,form,inputProps,...props,children});try{FileButton_FileButton.displayName="FileButton",FileButton_FileButton.__docgenInfo={description:"FileButton component for file uploads\nBuilt on top of Mantine FileButton with design token integration",displayName:"FileButton",props:{className:{defaultValue:null,description:"Additional CSS classes",name:"className",required:!1,type:{name:"string"}},style:{defaultValue:null,description:"Custom styles",name:"style",required:!1,type:{name:"CSSProperties"}},onChange:{defaultValue:null,description:"File change handler",name:"onChange",required:!0,type:{name:"(file: File | null) => void"}},accept:{defaultValue:null,description:"Accept attribute for file input",name:"accept",required:!1,type:{name:"string"}},multiple:{defaultValue:{value:"false"},description:"Whether input allows multiple files",name:"multiple",required:!1,type:{name:"boolean"}},disabled:{defaultValue:{value:"false"},description:"Whether input is disabled",name:"disabled",required:!1,type:{name:"boolean"}},children:{defaultValue:null,description:"Children to render (button content)",name:"children",required:!0,type:{name:"(props: { onClick: () => void; }) => ReactNode"}},name:{defaultValue:null,description:"Name attribute for file input",name:"name",required:!1,type:{name:"string"}},form:{defaultValue:null,description:"Form attribute",name:"form",required:!1,type:{name:"string"}},inputProps:{defaultValue:null,description:"Input props",name:"inputProps",required:!1,type:{name:'Omit<DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>, "ref">'}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/atoms/FileButton/FileButton.tsx#FileButton"]={docgenInfo:FileButton_FileButton.__docgenInfo,name:"FileButton",path:"src/components/atoms/FileButton/FileButton.tsx#FileButton"})}catch(__react_docgen_typescript_loader_error){}try{FileButton_Multiple.displayName="FileButton_Multiple",FileButton_Multiple.__docgenInfo={description:"FileButton component for multiple file uploads",displayName:"FileButton_Multiple",props:{className:{defaultValue:null,description:"Additional CSS classes",name:"className",required:!1,type:{name:"string"}},style:{defaultValue:null,description:"Custom styles",name:"style",required:!1,type:{name:"CSSProperties"}},onChange:{defaultValue:null,description:"File change handler for multiple files",name:"onChange",required:!0,type:{name:"(files: File[]) => void"}},accept:{defaultValue:null,description:"Accept attribute for file input",name:"accept",required:!1,type:{name:"string"}},disabled:{defaultValue:{value:"false"},description:"Whether input is disabled",name:"disabled",required:!1,type:{name:"boolean"}},children:{defaultValue:null,description:"Children to render (button content)",name:"children",required:!0,type:{name:"(props: { onClick: () => void; }) => ReactNode"}},name:{defaultValue:null,description:"Name attribute for file input",name:"name",required:!1,type:{name:"string"}},form:{defaultValue:null,description:"Form attribute",name:"form",required:!1,type:{name:"string"}},inputProps:{defaultValue:null,description:"Input props",name:"inputProps",required:!1,type:{name:'Omit<DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>, "ref">'}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/atoms/FileButton/FileButton.tsx#FileButton_Multiple"]={docgenInfo:FileButton_Multiple.__docgenInfo,name:"FileButton_Multiple",path:"src/components/atoms/FileButton/FileButton.tsx#FileButton_Multiple"})}catch(__react_docgen_typescript_loader_error){}var Button=__webpack_require__("./src/components/atoms/Button/index.ts");const FileButton_stories={title:"Atoms/FileButton",component:FileButton_FileButton,parameters:{layout:"centered",docs:{description:{component:"FileButton component provides file upload functionality by wrapping a hidden file input. Works with any trigger element and supports single or multiple file selection."}}},tags:["autodocs"],argTypes:{accept:{control:"text",description:"File types to accept"},multiple:{control:"boolean",description:"Allow multiple file selection"},disabled:{control:"boolean",description:"Whether input is disabled"}}},Default={render:function DefaultComponent(){const[file,setFile]=react.useState(null);return(0,jsx_runtime.jsxs)("div",{style:{display:"flex",flexDirection:"column",gap:"16px",alignItems:"center"},children:[(0,jsx_runtime.jsx)(FileButton_FileButton,{onChange:setFile,accept:"image/*",children:props=>(0,jsx_runtime.jsx)(Button.$,{...props,variant:"outline",children:"📁 Upload Image"})}),file&&(0,jsx_runtime.jsxs)("div",{style:{textAlign:"center"},children:[(0,jsx_runtime.jsx)("p",{style:{margin:"0 0 4px 0",fontSize:"var(--fs-sm)",fontWeight:"var(--fw-medium)"},children:"Selected file:"}),(0,jsx_runtime.jsxs)("p",{style:{margin:0,fontSize:"var(--fs-sm)"},children:[(0,jsx_runtime.jsx)("strong",{children:file.name})," (",Math.round(file.size/1024)," KB)"]})]})]})}},MultipleFiles={render:function MultipleComponent(){const[files,setFiles]=react.useState([]);return(0,jsx_runtime.jsxs)("div",{style:{display:"flex",flexDirection:"column",gap:"16px",alignItems:"center"},children:[(0,jsx_runtime.jsx)(FileButton_Multiple,{onChange:setFiles,accept:"image/*",children:props=>(0,jsx_runtime.jsx)(Button.$,{...props,variant:"primary",children:"📷 Upload Multiple Images"})}),files.length>0&&(0,jsx_runtime.jsxs)("div",{style:{textAlign:"center",maxWidth:"300px"},children:[(0,jsx_runtime.jsxs)("p",{style:{margin:"0 0 8px 0",fontSize:"var(--fs-sm)",fontWeight:"var(--fw-medium)"},children:["Selected files (",files.length,"):"]}),(0,jsx_runtime.jsx)("div",{style:{display:"flex",flexDirection:"column",gap:"4px"},children:files.map((file,index)=>(0,jsx_runtime.jsxs)("p",{style:{margin:0,fontSize:"var(--fs-xs)"},children:[file.name," (",Math.round(file.size/1024)," KB)"]},index))})]})]})}},DifferentAcceptTypes={render:function AcceptTypesComponent(){const[imageFile,setImageFile]=react.useState(null),[documentFile,setDocumentFile]=react.useState(null),[anyFile,setAnyFile]=react.useState(null);return(0,jsx_runtime.jsxs)("div",{style:{display:"flex",flexDirection:"column",gap:"24px",alignItems:"center"},children:[(0,jsx_runtime.jsxs)("div",{style:{textAlign:"center"},children:[(0,jsx_runtime.jsx)("p",{style:{margin:"0 0 8px 0",fontSize:"var(--fs-sm)",fontWeight:"var(--fw-medium)"},children:"Images Only"}),(0,jsx_runtime.jsx)(FileButton_FileButton,{onChange:setImageFile,accept:"image/*",children:props=>(0,jsx_runtime.jsx)(Button.$,{...props,variant:"outline",size:"sm",children:"🖼️ Upload Image"})}),imageFile&&(0,jsx_runtime.jsxs)("p",{style:{margin:"8px 0 0 0",fontSize:"var(--fs-xs)"},children:["Selected: ",imageFile.name]})]}),(0,jsx_runtime.jsxs)("div",{style:{textAlign:"center"},children:[(0,jsx_runtime.jsx)("p",{style:{margin:"0 0 8px 0",fontSize:"var(--fs-sm)",fontWeight:"var(--fw-medium)"},children:"Documents Only"}),(0,jsx_runtime.jsx)(FileButton_FileButton,{onChange:setDocumentFile,accept:".pdf,.doc,.docx,.txt",children:props=>(0,jsx_runtime.jsx)(Button.$,{...props,variant:"outline",size:"sm",children:"📄 Upload Document"})}),documentFile&&(0,jsx_runtime.jsxs)("p",{style:{margin:"8px 0 0 0",fontSize:"var(--fs-xs)"},children:["Selected: ",documentFile.name]})]}),(0,jsx_runtime.jsxs)("div",{style:{textAlign:"center"},children:[(0,jsx_runtime.jsx)("p",{style:{margin:"0 0 8px 0",fontSize:"var(--fs-sm)",fontWeight:"var(--fw-medium)"},children:"Any File"}),(0,jsx_runtime.jsx)(FileButton_FileButton,{onChange:setAnyFile,children:props=>(0,jsx_runtime.jsx)(Button.$,{...props,variant:"outline",size:"sm",children:"📎 Upload Any File"})}),anyFile&&(0,jsx_runtime.jsxs)("p",{style:{margin:"8px 0 0 0",fontSize:"var(--fs-xs)"},children:["Selected: ",anyFile.name]})]})]})}},CustomTriggers={render:function TriggersComponent(){const[file1,setFile1]=react.useState(null),[file2,setFile2]=react.useState(null),[file3,setFile3]=react.useState(null);return(0,jsx_runtime.jsxs)("div",{style:{display:"flex",flexDirection:"column",gap:"24px",alignItems:"center"},children:[(0,jsx_runtime.jsxs)("div",{style:{textAlign:"center"},children:[(0,jsx_runtime.jsx)("p",{style:{margin:"0 0 8px 0",fontSize:"var(--fs-sm)",fontWeight:"var(--fw-medium)"},children:"Button Trigger"}),(0,jsx_runtime.jsx)(FileButton_FileButton,{onChange:setFile1,accept:"image/*",children:props=>(0,jsx_runtime.jsx)(Button.$,{...props,variant:"gradient",children:"Click to Upload"})}),file1&&(0,jsx_runtime.jsxs)("p",{style:{margin:"8px 0 0 0",fontSize:"var(--fs-xs)"},children:["✓ ",file1.name]})]}),(0,jsx_runtime.jsxs)("div",{style:{textAlign:"center"},children:[(0,jsx_runtime.jsx)("p",{style:{margin:"0 0 8px 0",fontSize:"var(--fs-sm)",fontWeight:"var(--fw-medium)"},children:"Custom Div Trigger"}),(0,jsx_runtime.jsx)(FileButton_FileButton,{onChange:setFile2,accept:"*/*",children:props=>(0,jsx_runtime.jsxs)("div",{...props,style:{padding:"16px 24px",borderRadius:"var(--radius-md)",cursor:"pointer",textAlign:"center",transition:"all 0.2s ease"},onMouseEnter:e=>{e.currentTarget.style.borderColor="var(--color-primary-400)",e.currentTarget.style.backgroundColor="var(--color-primary-50)"},onMouseLeave:e=>{e.currentTarget.style.borderColor=file2?"var(--color-success-300)":"var(--color-neutral-300)",e.currentTarget.style.backgroundColor=file2?"var(--color-success-50)":"var(--color-neutral-50)"},children:[(0,jsx_runtime.jsx)("div",{style:{fontSize:"32px",marginBottom:"8px"},children:"📁"}),(0,jsx_runtime.jsx)("div",{style:{fontSize:"var(--fs-sm)",fontWeight:"var(--fw-medium)"},children:file2?`✓ ${file2.name}`:"Drop file here or click to browse"})]})})]}),(0,jsx_runtime.jsxs)("div",{style:{textAlign:"center"},children:[(0,jsx_runtime.jsx)("p",{style:{margin:"0 0 8px 0",fontSize:"var(--fs-sm)",fontWeight:"var(--fw-medium)"},children:"Link Style Trigger"}),(0,jsx_runtime.jsx)(FileButton_FileButton,{onChange:setFile3,accept:"image/*",children:props=>(0,jsx_runtime.jsx)("span",{...props,style:{fontSize:"var(--fs-sm)",cursor:"pointer",textDecoration:"underline",fontWeight:"var(--fw-medium)"},children:file3?`Change file (${file3.name})`:"Browse for image file"})})]})]})}},Disabled={render:()=>(0,jsx_runtime.jsx)("div",{style:{display:"flex",flexDirection:"column",gap:"16px",alignItems:"center"},children:(0,jsx_runtime.jsxs)("div",{style:{textAlign:"center"},children:[(0,jsx_runtime.jsx)("p",{style:{margin:"0 0 8px 0",fontSize:"var(--fs-sm)",fontWeight:"var(--fw-medium)"},children:"Disabled State"}),(0,jsx_runtime.jsx)(FileButton_FileButton,{onChange:()=>{},disabled:!0,children:props=>(0,jsx_runtime.jsx)(Button.$,{...props,disabled:!0,children:"📁 Upload File (Disabled)"})})]})})},WithProgress={render:function ProgressComponent(){const[file,setFile]=react.useState(null),[uploading,setUploading]=react.useState(!1),[progress,setProgress]=react.useState(0);return(0,jsx_runtime.jsxs)("div",{style:{display:"flex",flexDirection:"column",gap:"16px",alignItems:"center",minWidth:"300px"},children:[(0,jsx_runtime.jsx)(FileButton_FileButton,{onChange:newFile=>{setFile(newFile),setProgress(0),setUploading(!1)},accept:"*/*",children:props=>(0,jsx_runtime.jsx)(Button.$,{...props,variant:"outline",disabled:uploading,children:"📁 Select File"})}),file&&(0,jsx_runtime.jsxs)("div",{style:{width:"100%",textAlign:"center"},children:[(0,jsx_runtime.jsxs)("p",{style:{margin:"0 0 8px 0",fontSize:"var(--fs-sm)",fontWeight:"var(--fw-medium)"},children:["Selected: ",file.name]}),!uploading&&0===progress&&(0,jsx_runtime.jsx)(Button.$,{onClick:()=>{if(!file)return;setUploading(!0),setProgress(0);const interval=setInterval(()=>{setProgress(prev=>prev>=100?(clearInterval(interval),setUploading(!1),100):prev+10)},200)},size:"sm",variant:"primary",children:"🚀 Start Upload"}),uploading&&(0,jsx_runtime.jsxs)("div",{children:[(0,jsx_runtime.jsx)("div",{style:{width:"100%",height:"8px",borderRadius:"var(--radius-sm)",marginBottom:"8px"},children:(0,jsx_runtime.jsx)("div",{style:{width:`${progress}%`,height:"100%",borderRadius:"var(--radius-sm)",transition:"width 0.2s ease"}})}),(0,jsx_runtime.jsxs)("p",{style:{margin:0,fontSize:"var(--fs-xs)"},children:["Uploading... ",progress,"%"]})]}),100===progress&&!uploading&&(0,jsx_runtime.jsx)("p",{style:{margin:0,fontSize:"var(--fs-sm)",fontWeight:"var(--fw-medium)"},children:"✅ Upload completed!"})]})]})}},__namedExportsOrder=["Default","MultipleFiles","DifferentAcceptTypes","CustomTriggers","Disabled","WithProgress"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  render: function DefaultComponent() {\n    const [file, setFile] = React.useState<File | null>(null);\n    return <div style={{\n      display: 'flex',\n      flexDirection: 'column',\n      gap: '16px',\n      alignItems: 'center'\n    }}>\n        <FileButton onChange={setFile} accept=\"image/*\">\n          {props => <Button {...props} variant=\"outline\">\n              📁 Upload Image\n            </Button>}\n        </FileButton>\n        \n        {file && <div style={{\n        textAlign: 'center'\n      }}>\n            <p style={{\n          margin: '0 0 4px 0',\n          fontSize: 'var(--fs-sm)',\n          fontWeight: 'var(--fw-medium)'\n        }}>\n              Selected file:\n            </p>\n            <p style={{\n          margin: 0,\n          fontSize: 'var(--fs-sm)'\n        }}>\n              <strong>{file.name}</strong> ({Math.round(file.size / 1024)} KB)\n            </p>\n          </div>}\n      </div>;\n  }\n}",...Default.parameters?.docs?.source}}},MultipleFiles.parameters={...MultipleFiles.parameters,docs:{...MultipleFiles.parameters?.docs,source:{originalSource:"{\n  render: function MultipleComponent() {\n    const [files, setFiles] = React.useState<File[]>([]);\n    return <div style={{\n      display: 'flex',\n      flexDirection: 'column',\n      gap: '16px',\n      alignItems: 'center'\n    }}>\n        <FileButton_Multiple onChange={setFiles} accept=\"image/*\">\n          {props => <Button {...props} variant=\"primary\">\n              📷 Upload Multiple Images\n            </Button>}\n        </FileButton_Multiple>\n        \n        {files.length > 0 && <div style={{\n        textAlign: 'center',\n        maxWidth: '300px'\n      }}>\n            <p style={{\n          margin: '0 0 8px 0',\n          fontSize: 'var(--fs-sm)',\n          fontWeight: 'var(--fw-medium)'\n        }}>\n              Selected files ({files.length}):\n            </p>\n            <div style={{\n          display: 'flex',\n          flexDirection: 'column',\n          gap: '4px'\n        }}>\n              {files.map((file, index) => <p key={index} style={{\n            margin: 0,\n            fontSize: 'var(--fs-xs)'\n          }}>\n                  {file.name} ({Math.round(file.size / 1024)} KB)\n                </p>)}\n            </div>\n          </div>}\n      </div>;\n  }\n}",...MultipleFiles.parameters?.docs?.source}}},DifferentAcceptTypes.parameters={...DifferentAcceptTypes.parameters,docs:{...DifferentAcceptTypes.parameters?.docs,source:{originalSource:"{\n  render: function AcceptTypesComponent() {\n    const [imageFile, setImageFile] = React.useState<File | null>(null);\n    const [documentFile, setDocumentFile] = React.useState<File | null>(null);\n    const [anyFile, setAnyFile] = React.useState<File | null>(null);\n    return <div style={{\n      display: 'flex',\n      flexDirection: 'column',\n      gap: '24px',\n      alignItems: 'center'\n    }}>\n        <div style={{\n        textAlign: 'center'\n      }}>\n          <p style={{\n          margin: '0 0 8px 0',\n          fontSize: 'var(--fs-sm)',\n          fontWeight: 'var(--fw-medium)'\n        }}>Images Only</p>\n          <FileButton onChange={setImageFile} accept=\"image/*\">\n            {props => <Button {...props} variant=\"outline\" size=\"sm\">\n                🖼️ Upload Image\n              </Button>}\n          </FileButton>\n          {imageFile && <p style={{\n          margin: '8px 0 0 0',\n          fontSize: 'var(--fs-xs)'\n        }}>\n              Selected: {imageFile.name}\n            </p>}\n        </div>\n\n        <div style={{\n        textAlign: 'center'\n      }}>\n          <p style={{\n          margin: '0 0 8px 0',\n          fontSize: 'var(--fs-sm)',\n          fontWeight: 'var(--fw-medium)'\n        }}>Documents Only</p>\n          <FileButton onChange={setDocumentFile} accept=\".pdf,.doc,.docx,.txt\">\n            {props => <Button {...props} variant=\"outline\" size=\"sm\">\n                📄 Upload Document\n              </Button>}\n          </FileButton>\n          {documentFile && <p style={{\n          margin: '8px 0 0 0',\n          fontSize: 'var(--fs-xs)'\n        }}>\n              Selected: {documentFile.name}\n            </p>}\n        </div>\n\n        <div style={{\n        textAlign: 'center'\n      }}>\n          <p style={{\n          margin: '0 0 8px 0',\n          fontSize: 'var(--fs-sm)',\n          fontWeight: 'var(--fw-medium)'\n        }}>Any File</p>\n          <FileButton onChange={setAnyFile}>\n            {props => <Button {...props} variant=\"outline\" size=\"sm\">\n                📎 Upload Any File\n              </Button>}\n          </FileButton>\n          {anyFile && <p style={{\n          margin: '8px 0 0 0',\n          fontSize: 'var(--fs-xs)'\n        }}>\n              Selected: {anyFile.name}\n            </p>}\n        </div>\n      </div>;\n  }\n}",...DifferentAcceptTypes.parameters?.docs?.source}}},CustomTriggers.parameters={...CustomTriggers.parameters,docs:{...CustomTriggers.parameters?.docs,source:{originalSource:"{\n  render: function TriggersComponent() {\n    const [file1, setFile1] = React.useState<File | null>(null);\n    const [file2, setFile2] = React.useState<File | null>(null);\n    const [file3, setFile3] = React.useState<File | null>(null);\n    return <div style={{\n      display: 'flex',\n      flexDirection: 'column',\n      gap: '24px',\n      alignItems: 'center'\n    }}>\n        <div style={{\n        textAlign: 'center'\n      }}>\n          <p style={{\n          margin: '0 0 8px 0',\n          fontSize: 'var(--fs-sm)',\n          fontWeight: 'var(--fw-medium)'\n        }}>Button Trigger</p>\n          <FileButton onChange={setFile1} accept=\"image/*\">\n            {props => <Button {...props} variant=\"gradient\">\n                Click to Upload\n              </Button>}\n          </FileButton>\n          {file1 && <p style={{\n          margin: '8px 0 0 0',\n          fontSize: 'var(--fs-xs)'\n        }}>✓ {file1.name}</p>}\n        </div>\n\n        <div style={{\n        textAlign: 'center'\n      }}>\n          <p style={{\n          margin: '0 0 8px 0',\n          fontSize: 'var(--fs-sm)',\n          fontWeight: 'var(--fw-medium)'\n        }}>Custom Div Trigger</p>\n          <FileButton onChange={setFile2} accept=\"*/*\">\n            {props => <div {...props} style={{\n            padding: '16px 24px',\n            borderRadius: 'var(--radius-md)',\n            cursor: 'pointer',\n            textAlign: 'center',\n            transition: 'all 0.2s ease'\n          }} onMouseEnter={e => {\n            e.currentTarget.style.borderColor = 'var(--color-primary-400)';\n            e.currentTarget.style.backgroundColor = 'var(--color-primary-50)';\n          }} onMouseLeave={e => {\n            e.currentTarget.style.borderColor = file2 ? 'var(--color-success-300)' : 'var(--color-neutral-300)';\n            e.currentTarget.style.backgroundColor = file2 ? 'var(--color-success-50)' : 'var(--color-neutral-50)';\n          }}>\n                <div style={{\n              fontSize: '32px',\n              marginBottom: '8px'\n            }}>📁</div>\n                <div style={{\n              fontSize: 'var(--fs-sm)',\n              fontWeight: 'var(--fw-medium)'\n            }}>\n                  {file2 ? `✓ ${file2.name}` : 'Drop file here or click to browse'}\n                </div>\n              </div>}\n          </FileButton>\n        </div>\n\n        <div style={{\n        textAlign: 'center'\n      }}>\n          <p style={{\n          margin: '0 0 8px 0',\n          fontSize: 'var(--fs-sm)',\n          fontWeight: 'var(--fw-medium)'\n        }}>Link Style Trigger</p>\n          <FileButton onChange={setFile3} accept=\"image/*\">\n            {props => <span {...props} style={{\n            fontSize: 'var(--fs-sm)',\n            cursor: 'pointer',\n            textDecoration: 'underline',\n            fontWeight: 'var(--fw-medium)'\n          }}>\n                {file3 ? `Change file (${file3.name})` : 'Browse for image file'}\n              </span>}\n          </FileButton>\n        </div>\n      </div>;\n  }\n}",...CustomTriggers.parameters?.docs?.source}}},Disabled.parameters={...Disabled.parameters,docs:{...Disabled.parameters?.docs,source:{originalSource:"{\n  render: () => <div style={{\n    display: 'flex',\n    flexDirection: 'column',\n    gap: '16px',\n    alignItems: 'center'\n  }}>\n      <div style={{\n      textAlign: 'center'\n    }}>\n        <p style={{\n        margin: '0 0 8px 0',\n        fontSize: 'var(--fs-sm)',\n        fontWeight: 'var(--fw-medium)'\n      }}>Disabled State</p>\n        <FileButton onChange={() => {}} disabled>\n          {props => <Button {...props} disabled>\n              📁 Upload File (Disabled)\n            </Button>}\n        </FileButton>\n      </div>\n    </div>\n}",...Disabled.parameters?.docs?.source}}},WithProgress.parameters={...WithProgress.parameters,docs:{...WithProgress.parameters?.docs,source:{originalSource:"{\n  render: function ProgressComponent() {\n    const [file, setFile] = React.useState<File | null>(null);\n    const [uploading, setUploading] = React.useState(false);\n    const [progress, setProgress] = React.useState(0);\n    const simulateUpload = () => {\n      if (!file) return;\n      setUploading(true);\n      setProgress(0);\n      const interval = setInterval(() => {\n        setProgress(prev => {\n          if (prev >= 100) {\n            clearInterval(interval);\n            setUploading(false);\n            return 100;\n          }\n          return prev + 10;\n        });\n      }, 200);\n    };\n    const handleFileChange = (newFile: File | null) => {\n      setFile(newFile);\n      setProgress(0);\n      setUploading(false);\n    };\n    return <div style={{\n      display: 'flex',\n      flexDirection: 'column',\n      gap: '16px',\n      alignItems: 'center',\n      minWidth: '300px'\n    }}>\n        <FileButton onChange={handleFileChange} accept=\"*/*\">\n          {props => <Button {...props} variant=\"outline\" disabled={uploading}>\n              📁 Select File\n            </Button>}\n        </FileButton>\n\n        {file && <div style={{\n        width: '100%',\n        textAlign: 'center'\n      }}>\n            <p style={{\n          margin: '0 0 8px 0',\n          fontSize: 'var(--fs-sm)',\n          fontWeight: 'var(--fw-medium)'\n        }}>\n              Selected: {file.name}\n            </p>\n            \n            {!uploading && progress === 0 && <Button onClick={simulateUpload} size=\"sm\" variant=\"primary\">\n                🚀 Start Upload\n              </Button>}\n\n            {uploading && <div>\n                <div style={{\n            width: '100%',\n            height: '8px',\n            borderRadius: 'var(--radius-sm)',\n            marginBottom: '8px'\n          }}>\n                  <div style={{\n              width: `${progress}%`,\n              height: '100%',\n              borderRadius: 'var(--radius-sm)',\n              transition: 'width 0.2s ease'\n            }} />\n                </div>\n                <p style={{\n            margin: 0,\n            fontSize: 'var(--fs-xs)'\n          }}>\n                  Uploading... {progress}%\n                </p>\n              </div>}\n\n            {progress === 100 && !uploading && <p style={{\n          margin: 0,\n          fontSize: 'var(--fs-sm)',\n          fontWeight: 'var(--fw-medium)'\n        }}>\n                ✅ Upload completed!\n              </p>}\n          </div>}\n      </div>;\n  }\n}",...WithProgress.parameters?.docs?.source}}}}}]);